version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: everest-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: everest_restaurant
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - everest-network

  # Backend API
  backend:
    build: ./backend
    container_name: everest-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/everest_restaurant?authSource=admin
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRE=30d
      - PORT=5000
      - FRONTEND_URL=http://localhost:8080
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=your_email@gmail.com
      - EMAIL_PASS=your_email_password
      - CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
      - CLOUDINARY_API_KEY=your_cloudinary_api_key
      - CLOUDINARY_API_SECRET=your_cloudinary_api_secret
      - PAYME_MERCHANT_ID=your_payme_merchant_id
      - PAYME_SECRET_KEY=your_payme_secret_key
      - PAYME_TEST_MODE=true
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - everest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build: ./frontend
    container_name: everest-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - everest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:

networks:
  everest-network:
    driver: bridge 